To find the gene that precedes `COL1A2` on the same strand, we can follow these steps:

1. Retrieve the `COL1A2` gene from the database.
2. Get the chromosome and strand information for `COL1A2`.
3. Search for genes on the same chromosome and strand that end before the start of `COL1A2`.
4. Sort these genes by their end position to find the one that is closest to `COL1A2`.

Here's a Python script that implements this logic using the `gffutils` library:

```python
import gffutils

# Connect to the GFF/GTF database
db = gffutils.FeatureDB('path_to_your_database.db')

# Step 1: Find the COL1A2 gene
col1a2 = next(filter(lambda x: x.attributes.get('gene_name', [''])[0] == 'COL1A2',
                     db.features_of_type('gene')))

# Step 2: Get the chromosome and strand of COL1A2
chromosome = col1a2.seqid
strand = col1a2.strand

# Step 3: Find genes on the same chromosome and strand that end before COL1A2 starts
preceding_genes = sorted(
    (gene for gene in db.features_of_type('gene') 
     if gene.seqid == chromosome and gene.strand == strand and gene.end < col1a2.start),
    key=lambda x: x.end,  # Sort by end position
    reverse=True  # We want the closest one, so sort in descending order
)

# Step 4: Get the closest preceding gene
if preceding_genes:
    closest_gene = preceding_genes[0]
    closest_gene_id = closest_gene.attributes.get('gene_id', ['Unknown'])[0]
    closest_gene_name = closest_gene.attributes.get('gene_name', ['Unknown'])[0]
    print(f"The gene that precedes COL1A2 is: {closest_gene_name} (ID: {closest_gene_id})")
else:
    print("No gene precedes COL1A2 on the same strand.")
```

### Explanation of the Code:
- **Database Connection:** We connect to the GFF/GTF database using `gffutils.FeatureDB()`.
- **Finding COL1A2:** We use a filter to find the `COL1A2` gene based on its `gene_name`.
- **Chromosome and Strand:** We extract the chromosome and strand information from the `COL1A2` gene.
- **Finding Preceding Genes:** We create a sorted list of genes that are on the same chromosome and strand and end before the start of `COL1A2`. The sorting is done in descending order based on the `end` position to get the closest preceding gene.
- **Output:** If there are any preceding genes, we print the closest one; otherwise, we indicate that no such gene exists.

Make sure to replace `'path_to_your_database.db'` with the actual path to your GFF/GTF database file.