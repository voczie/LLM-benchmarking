```python
import sqlite3

conn = sqlite3.connect('your_database.db')  # Replace 'your_database.db' with your actual database file
cursor = conn.cursor()

genes = ['XIST', 'MALAT1', 'BRCA1', 'COL1A2', 'NFKB1', 'NFKB2', 'REL', 'RELA', 'RELB']

for gene in genes:
    query = f"""
    SELECT start, end 
    FROM features 
    WHERE seqid='chrX' AND featuretype='gene' AND id='{gene}'
    """
    cursor.execute(query)
    result = cursor.fetchone()

    if result:
        start, end = result
        locus_size = end - start + 1
        print(f"Locus size of {gene}: {locus_size} bp")
    else:
        print(f"Gene '{gene}' not found in the database.")

conn.close()
```

**Explanation:**

1. **Connect to the Database:** Replace `'your_database.db'` with the actual filename of your SQLite database.
2. **Define Gene List:** Create a list `genes` containing the names of the genes you want to analyze.
3. **Iterate Through Genes:** Loop through each gene in the `genes` list.
4. **Construct SQL Query:** For each gene, build a query that selects the `start` and `end` coordinates from the `features` table where:
   - `seqid` is 'chrX' (assuming your genes are on chromosome X).
   - `featuretype` is 'gene'.
   - `id` matches the current gene name.
5. **Execute Query:** Use `cursor.execute(query)` to run the query against the database.
6. **Fetch Result:** Retrieve a single row (the result) using `cursor.fetchone()`. This will contain the `start` and `end` coordinates if the gene is found.
7. **Calculate Locus Size:** If a result is found, calculate the locus size by subtracting `start` from `end` and adding 1.
8. **Print Result:** Display the calculated locus size for each gene.
9. **Handle Missing Genes:** If no result is found (gene not in the database), print a message indicating that.



Let me know if you have any other questions or need further assistance!