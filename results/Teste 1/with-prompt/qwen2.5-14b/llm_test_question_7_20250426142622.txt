To determine how many exons the `XIST` gene has, you can follow these steps:

1. **Identify the Gene Feature**: First, find the feature corresponding to the `XIST` gene.
2. **Retrieve Exon Features**: Then, retrieve all exon features that are children of the identified gene.

Here's a step-by-step guide and code snippet to achieve this using the SQLite database with the provided schema:

### Step 1: Identify the Gene Feature
First, you need to find the `XIST` gene in the database. You can do this by querying for genes where the gene name is `XIST`.

### Step 2: Retrieve Exon Features
Once you have identified the gene feature, use it to retrieve all exon features that are children of this gene.

Here's how you can implement this in Python using SQLite:

```python
import sqlite3

# Connect to the database
conn = sqlite3.connect('your_database.db')
db = conn.cursor()

def get_gene_id(gene_name):
    # Query for the gene feature with the given name
    db.execute("SELECT id FROM features WHERE attributes LIKE '%gene_name=\"{}\"%'".format(gene_name))
    result = db.fetchone()
    if result:
        return result[0]
    else:
        return None

def get_exon_count(gene_id):
    # Query for all exons that are children of the given gene
    db.execute("SELECT COUNT(*) FROM relations WHERE parent=? AND level=1", (gene_id,))
    result = db.fetchone()
    if result:
        return result[0]
    else:
        return 0

# Step 1: Get the ID of the XIST gene
xist_gene_id = get_gene_id('XIST')
if xist_gene_id is None:
    print("Gene 'XIST' not found.")
else:
    # Step 2: Count the number of exons for the XIST gene
    exon_count = get_exon_count(xist_gene_id)
    print(f"The XIST gene has {exon_count} exons.")

# Close the database connection
conn.close()
```

### Explanation:

1. **get_gene_id Function**:
   - This function queries the `features` table to find the ID of the gene with the name `XIST`.
   - It uses a LIKE clause to match the attribute string containing `gene_name="XIST"`.

2. **get_exon_count Function**:
   - This function queries the `relations` table to count all exons that are children (`level=1`) of the given gene ID.
   - The query counts the number of rows where the parent is the gene ID and the level is 1, indicating an exon.

3. **Main Script**:
   - First, it calls `get_gene_id` with 'XIST' to get the gene's ID.
   - If the gene is found, it then calls `get_exon_count` with the gene ID to count the exons.
   - Finally, it prints out the number of exons for the XIST gene.

Make sure to replace `'your_database.db'` with the actual path to your SQLite database file. This script will give you the exact number of exons associated with the `XIST` gene in your genome annotation database.