To generate a scatter plot representing the distribution of gene sizes on the X chromosome, you'll need to follow these steps:

1. **Extract Gene Sizes from SQLite Database**: First, extract the start and end positions for genes located on the X chromosome from your `features` table.
2. **Calculate Gene Lengths**: Calculate the length (size) of each gene by subtracting the start position from the end position.
3. **Export Data to a Format Suitable for Plotting**: Export the data in a format that can be easily read and plotted, such as CSV or directly into a plotting library like `matplotlib` or `seaborn`.
4. **Generate Scatterplot**: Use a plotting library to generate the scatter plot.

Here's how you could do it step-by-step:

### Step 1: Extract Gene Sizes from SQLite Database

First, connect to your SQLite database and extract gene sizes for genes on chromosome X.

```python
import sqlite3
import pandas as pd

# Connect to the SQLite database
conn = sqlite3.connect('your_database.db')

# Query to get gene start and end positions on chromosome X
query = """
SELECT id, seqid, start, end 
FROM features 
WHERE featuretype = 'gene' AND seqid = 'X';
"""

# Execute query and load into a DataFrame
df_genes = pd.read_sql_query(query, conn)

conn.close()
```

### Step 2: Calculate Gene Lengths

Calculate the length of each gene.

```python
df_genes['length'] = df_genes['end'] - df_genes['start']
```

### Step 3: Export Data (Optional)

If you want to export this data for external plotting, you can save it as a CSV file:

```python
df_genes.to_csv('gene_sizes_X_chromosome.csv', index=False)
```

However, since we are going to plot directly from the DataFrame, exporting is optional.

### Step 4: Generate Scatterplot

Now use `matplotlib` or `seaborn` to generate a scatter plot of gene sizes. Here's an example using `matplotlib`.

```python
import matplotlib.pyplot as plt

# Plotting the scatter plot
plt.figure(figsize=(10, 6))
plt.scatter(df_genes['length'], df_genes.index, alpha=0.5)
plt.title('Distribution of Gene Sizes on X Chromosome')
plt.xlabel('Gene Length (bp)')
plt.ylabel('Gene Index')
plt.grid(True)

# Show the plot
plt.show()
```

### Explanation:

- **Scatter Plot**: Each point in the scatter plot represents a gene, with its position along the y-axis indicating its index and the x-axis showing the length of the gene.
- **Alpha Parameter**: Setting `alpha=0.5` makes overlapping points more visible.

This approach provides a visual representation of how gene sizes are distributed across the X chromosome. If you have many genes, consider using other types of plots like histograms or density plots for better insight into the distribution patterns.